[
    {
        "id": "10acdf134f09496b",
        "type": "tab",
        "label": "Pagina",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "979f66af87c3405b",
        "type": "tab",
        "label": "OPC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "32475c0d051dcd20",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0fe644d6ef1784a3",
        "type": "tab",
        "label": "METHOD TESTS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d906bab5cf3df0b4",
        "type": "tab",
        "label": "METHOD TESTS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9412633a5f7c754d",
        "type": "tab",
        "label": "METHOD TESTS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "05a898277f7030d9",
        "type": "websocket-listener",
        "path": "/ws/publishMessage",
        "wholemsg": "false"
    },
    {
        "id": "2cca224ba1e28d70",
        "type": "websocket-listener",
        "z": "10acdf134f09496b",
        "path": "/ws/simple",
        "wholemsg": "false"
    },
    {
        "id": "5c4bb0592350c339",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.5.228:4840/UA/rasp",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "646fa01d53ed7b65",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.2.228:4840/UA/rasp",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "cd011dd0.e86e",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://H7Q8Q13.mshome.net:53530/OPCUA/SimulationServer",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "61f749e4.827ac8",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://localhost:53881",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "7f96da0591a0b36a",
        "type": "http response",
        "z": "10acdf134f09496b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 120,
        "wires": []
    },
    {
        "id": "b27b7158a6c45e74",
        "type": "http in",
        "z": "10acdf134f09496b",
        "name": "",
        "url": "/simple",
        "method": "get",
        "swaggerDoc": "",
        "x": 201,
        "y": 120,
        "wires": [
            [
                "dacef3f6dd1028a2"
            ]
        ]
    },
    {
        "id": "dacef3f6dd1028a2",
        "type": "template",
        "z": "10acdf134f09496b",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n\n<head>\n    <title>Controlo da Estufa</title>\n    <style>\n        .content {\n            width: 100px;\n            height: 65px;\n            border: 1px solid grey;\n            position: relative;\n            bottom: 10px;\n            float: right;\n            font-size: 15px;\n            padding: 10px;\n        }\n\n        p {\n            position: relative;\n            top: -20px;\n        }\n    </style>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var values = []\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                values = data.split(\"\\n\");\n                line += \"<p>Temperatura: \"+values[0]+\" °C</p>\\n\";\n                line += \"<p>Ventoinha: \"+values[1]+\"</p>\";\n                \n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n</head>\n\n<body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n    <div class=\"content\">\n        <p>Beatriz Freitas PG47050<br>Gonçalo Guerra PG47217</p>\n    </div>\n    <font face=\"Arial\">\n        <h1>Controlo de Estufa</h1>\n        <div id=\"messages\"></div>\n        <div>\n        <p> Modo de operação </p>\n        <button type=\"button\" onclick='doit(\"manual\");'>Manual</button>\n        <button type=\"button\" onclick='doit(\"auto\");'>Auto</button>\n        </div>\n        <div>\n            <p> Controlo Ventoinha </p>\n        <button type=\"button\" onclick='doit(\"on\");'>Ligar Ventoinha</button>\n        <button type=\"button\" onclick='doit(\"off\");'>Desligar Ventoinha</button>\n        </div>\n        <hr />\n        <div id=\"status\">unknown</div>\n    </font>\n\n</body>\n\n</html>",
        "x": 398,
        "y": 120,
        "wires": [
            [
                "7f96da0591a0b36a"
            ]
        ]
    },
    {
        "id": "04afc9683bcf020d",
        "type": "inject",
        "z": "979f66af87c3405b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "f4207e6fea66d41a",
                "12db42d15fce766a"
            ]
        ]
    },
    {
        "id": "f4207e6fea66d41a",
        "type": "OpcUa-Item",
        "z": "979f66af87c3405b",
        "item": "ns=2;i=5",
        "datatype": "Float",
        "value": "",
        "name": "",
        "x": 380,
        "y": 140,
        "wires": [
            [
                "3e04ac89f28c9da9"
            ]
        ]
    },
    {
        "id": "3e04ac89f28c9da9",
        "type": "OpcUa-Client",
        "z": "979f66af87c3405b",
        "endpoint": "646fa01d53ed7b65",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "059ca9fca48dcb53"
            ]
        ]
    },
    {
        "id": "b6b463aced53119a",
        "type": "websocket out",
        "z": "979f66af87c3405b",
        "name": "",
        "server": "2cca224ba1e28d70",
        "client": "",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "12db42d15fce766a",
        "type": "OpcUa-Item",
        "z": "979f66af87c3405b",
        "item": "ns=2;i=6",
        "datatype": "String",
        "value": "",
        "name": "",
        "x": 380,
        "y": 220,
        "wires": [
            [
                "3e04ac89f28c9da9"
            ]
        ]
    },
    {
        "id": "33d2ed9f95ad75ff",
        "type": "websocket in",
        "z": "979f66af87c3405b",
        "name": "",
        "server": "2cca224ba1e28d70",
        "client": "",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "93737e2a9cba3a1f",
                "1ca8bf3c3ce42511"
            ]
        ]
    },
    {
        "id": "059ca9fca48dcb53",
        "type": "join",
        "z": "979f66af87c3405b",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 750,
        "y": 180,
        "wires": [
            [
                "b6b463aced53119a",
                "e0dd0bdc538d6c46"
            ]
        ]
    },
    {
        "id": "93737e2a9cba3a1f",
        "type": "debug",
        "z": "979f66af87c3405b",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 340,
        "wires": []
    },
    {
        "id": "e0dd0bdc538d6c46",
        "type": "debug",
        "z": "979f66af87c3405b",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 240,
        "wires": []
    },
    {
        "id": "a29ead8b9b84a115",
        "type": "OpcUa-Method",
        "z": "979f66af87c3405b",
        "endpoint": "646fa01d53ed7b65",
        "objectId": "ns=2;i=1",
        "methodId": "ns=2;i=2",
        "name": "",
        "inputArguments": [],
        "outputArguments": [],
        "arg0name": "command",
        "arg0type": "String",
        "arg0typeid": "",
        "arg0value": "auto",
        "arg1name": "",
        "arg1type": "",
        "arg1typeid": "",
        "arg1value": "",
        "arg2name": "",
        "arg2type": "",
        "arg2typeid": "",
        "arg2value": "",
        "out0name": "",
        "out0type": "",
        "out0typeid": "",
        "out0value": "",
        "x": 590,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1ca8bf3c3ce42511",
        "type": "function",
        "z": "979f66af87c3405b",
        "name": "",
        "func": "msg.objectId=\"ns=2;i=1\";\nmsg.methodId =\"ns=2;i=2\";\nmsg.inputArguments=[{dataType: \"String\", value:msg.payload}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "a29ead8b9b84a115"
            ]
        ]
    },
    {
        "id": "2276ec17a10baee2",
        "type": "websocket out",
        "z": "32475c0d051dcd20",
        "name": "",
        "server": "2cca224ba1e28d70",
        "client": "",
        "x": 840,
        "y": 440,
        "wires": []
    },
    {
        "id": "bbbe68066bfac31d",
        "type": "random",
        "z": "32475c0d051dcd20",
        "name": "Criador de Temperatura ",
        "low": 1,
        "high": "100",
        "inte": "true",
        "property": "payload",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "cbd56f6e0a4cf068"
            ]
        ]
    },
    {
        "id": "f84ea87afa064801",
        "type": "inject",
        "z": "32475c0d051dcd20",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "cbd56f6e0a4cf068",
        "type": "function",
        "z": "32475c0d051dcd20",
        "name": "function 4",
        "func": "flow.set('random1',msg.payload);\n//msg.payload = {'random1': msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "31968c365b82b49b"
            ]
        ]
    },
    {
        "id": "31968c365b82b49b",
        "type": "random",
        "z": "32475c0d051dcd20",
        "name": "Criador de Humidade",
        "low": "30",
        "high": "60",
        "inte": "true",
        "property": "payload",
        "x": 940,
        "y": 340,
        "wires": [
            [
                "481790b90fe4a676"
            ]
        ]
    },
    {
        "id": "481790b90fe4a676",
        "type": "function",
        "z": "32475c0d051dcd20",
        "name": "function 5",
        "func": "flow.set('random2',msg.payload);\nmsg.payload = {'random2': msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 520,
        "wires": [
            [
                "6de234658a1a321b"
            ]
        ]
    },
    {
        "id": "6de234658a1a321b",
        "type": "function",
        "z": "32475c0d051dcd20",
        "name": "function 6",
        "func": "msg.payload={'Temperatura':flow.get('random1'), 'Humidade':flow.get('random2')};\nmsg.headers={\"Content-type\":\"application/json\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 520,
        "wires": [
            [
                "93f05a4bd09f5d3a"
            ]
        ]
    },
    {
        "id": "29b6b9d69c9f9656",
        "type": "debug",
        "z": "32475c0d051dcd20",
        "name": "msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 580,
        "wires": []
    },
    {
        "id": "93f05a4bd09f5d3a",
        "type": "json",
        "z": "32475c0d051dcd20",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 650,
        "y": 520,
        "wires": [
            [
                "29b6b9d69c9f9656"
            ]
        ]
    },
    {
        "id": "c4c44ed0521b59e7",
        "type": "function",
        "z": "32475c0d051dcd20",
        "name": "function 7",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c8f6773a4eef5c26",
        "type": "OpcUa-Method",
        "z": "d906bab5cf3df0b4",
        "endpoint": "cd011dd0.e86e",
        "objectId": "ns=5;s=MyDevice",
        "methodId": "ns=5;s=MyMethod",
        "name": "Prosys MyMethod(sin, 3.3)",
        "inputArguments": [],
        "arg0name": "Operator",
        "arg0type": "String",
        "arg0value": "sin",
        "arg1name": "Value",
        "arg1type": "Double",
        "arg1value": "3.3",
        "arg2name": "",
        "arg2type": "",
        "arg2value": "",
        "x": 760,
        "y": 120,
        "wires": [
            [
                "b7e35129f88d91c8"
            ]
        ]
    },
    {
        "id": "142f98aa8717bbbc",
        "type": "inject",
        "z": "d906bab5cf3df0b4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Test1",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "c8f6773a4eef5c26"
            ]
        ]
    },
    {
        "id": "b7e35129f88d91c8",
        "type": "debug",
        "z": "d906bab5cf3df0b4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "79f27bbc94b8767b",
        "type": "function",
        "z": "d906bab5cf3df0b4",
        "name": "pow",
        "func": "msg.objectId=\"ns=5;s=MyDevice\";\nmsg.methodId=\"ns=5;s=MyMethod\";\nmsg.inputArguments=[{dataType: \"String\", value:\"pow\"}, {dataType:\"Double\", value: 3}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "c8f6773a4eef5c26"
            ]
        ]
    },
    {
        "id": "388b172a3d114e3a",
        "type": "inject",
        "z": "d906bab5cf3df0b4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Test2",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "79f27bbc94b8767b"
            ]
        ]
    },
    {
        "id": "253f13df8b2f7962",
        "type": "comment",
        "z": "d906bab5cf3df0b4",
        "name": "Call method by node parameters",
        "info": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "bde327c2f1a166df",
        "type": "comment",
        "z": "d906bab5cf3df0b4",
        "name": "Call method by injecting message",
        "info": "",
        "x": 410,
        "y": 220,
        "wires": []
    },
    {
        "id": "a99a9b28b35d3e5e",
        "type": "OpcUa-Method",
        "z": "9412633a5f7c754d",
        "endpoint": "cd011dd0.e86e",
        "objectId": "ns=5;s=MyDevice",
        "methodId": "ns=5;s=MyMethod",
        "name": "Prosys MyMethod(sin, 3.3)",
        "inputArguments": [],
        "arg0name": "Operator",
        "arg0type": "String",
        "arg0typeid": "",
        "arg0value": "sin",
        "arg1name": "Value",
        "arg1type": "Double",
        "arg1typeid": "",
        "arg1value": "3.3",
        "arg2name": "",
        "arg2type": "",
        "arg2typeid": "",
        "arg2value": "",
        "out0name": "",
        "out0type": "",
        "out0typeid": "",
        "out0value": "",
        "x": 760,
        "y": 120,
        "wires": [
            [
                "e42cc88dbb5f0c94"
            ]
        ]
    },
    {
        "id": "040d5ae12619b4c5",
        "type": "inject",
        "z": "9412633a5f7c754d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Test1",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "a99a9b28b35d3e5e"
            ]
        ]
    },
    {
        "id": "e42cc88dbb5f0c94",
        "type": "debug",
        "z": "9412633a5f7c754d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 120,
        "wires": []
    },
    {
        "id": "371ccfaea611e4de",
        "type": "function",
        "z": "9412633a5f7c754d",
        "name": "pow",
        "func": "msg.objectId=\"ns=5;s=MyDevice\";\nmsg.methodId=\"ns=5;s=MyMethod\";\nmsg.inputArguments=[{dataType: \"String\", value:\"pow\"}, {dataType:\"Double\", value: 3}];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "a99a9b28b35d3e5e"
            ]
        ]
    },
    {
        "id": "377f7d048e9d812d",
        "type": "inject",
        "z": "9412633a5f7c754d",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Test2",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "371ccfaea611e4de"
            ]
        ]
    },
    {
        "id": "86e0ae2ae0cc638c",
        "type": "comment",
        "z": "9412633a5f7c754d",
        "name": "Call method by node parameters",
        "info": "",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "c7dd5732edbf4f10",
        "type": "comment",
        "z": "9412633a5f7c754d",
        "name": "Call method by injecting message",
        "info": "",
        "x": 410,
        "y": 220,
        "wires": []
    }
]